@model WebSIC.Models.EmpresaViewModel

<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">Empresa</h1>
    </div>
</div>

@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Aeroportos, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-6">
                @Html.DropDownListFor(d => d.IdAeroporto, new SelectList(Model.Aeroportos.OrderBy(o => o.IdAeroporto), "IdAeroporto", "Descricao"), "Selecione", new { @class = "form-control select2" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.RazaoSocial, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.RazaoSocial, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RazaoSocial, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.NomeFantasia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.NomeFantasia, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NomeFantasia, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CGC, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.CGC, new { htmlAttributes = new { @class = "form-control" } })
            </div>

            @Html.LabelFor(model => model.TiposEmpresa, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(d => d.IdTipoEmpresa, new SelectList(Model.TiposEmpresa.OrderBy(o => o.IdTipoEmpresa), "IdTipoEmpresa", "Descricao"), "Selecione", new { @class = "form-control select2" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Endereco, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Endereco, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Endereco, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.Complemento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Complemento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Complemento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Numero, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-1">
                @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Numero, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.Bairro, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Bairro, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.CEP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.CEP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CEP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cidade, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.Cidade, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cidade, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.UF, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-1">
                @Html.EditorFor(model => model.UF, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UF, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Telefone, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Telefone, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TipoCobranca, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-2">
                @Html.EnumDropDownListFor(model => model.TipoCobranca, "Selecione", new { @class = "form-control select2" })
                @Html.ValidationMessageFor(model => model.TipoCobranca, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Observacao, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Observacao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Observacao, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                <label for="file" class="control-label col-md-1">Logotipo</label>
                <div class="col-md-10">
                    <input type="file" accept="image/*" onchange="loadFile(event)" class="btn btn-default"><br />
                    <img id="output" style="width: 250px; height: 100px;" />
                </div>
            </div>*@

        <div class="form-group">
            <label for="file" class="control-label col-md-1">Logotipo</label>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Logotipo, new { @type = "file", @class = "btn btn-default", @onchange = "loadFile(event)" })
                <br />
                <img id="output" style="width: 250px; height: 100px;" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-4">
                <input type="submit" value="Salvar" class="btn btn-primary" />
                @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-danger" })
            </div>
        </div>
    </div>


}

<div>

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $('#CGC').mask('00.000.000/0000-00');
        $('#CEP').mask('00000-000');
        $('#Telefone').mask('(00) 00000-0000');
    </script>
}
