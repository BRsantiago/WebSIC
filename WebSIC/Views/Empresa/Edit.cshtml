@model WebSIC.Models.EmpresaViewModel

<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">Editar Empresa</h1>
    </div>
</div>



<div class="form-horizontal">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdEmpresa);

        <div class="form-group">
            @Html.LabelFor(model => model.Aeroportos, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-6">
                @Html.DropDownListFor(d => d.IdAeroporto, new SelectList(Model.Aeroportos.OrderBy(o => o.IdAeroporto), "IdAeroporto", "Descricao"), "Selecione", new { @class = "form-control select2" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.RazaoSocial, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.RazaoSocial, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RazaoSocial, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.NomeFantasia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.NomeFantasia, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NomeFantasia, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CGC, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.CGC, new { htmlAttributes = new { @class = "form-control" } })
            </div>

            @Html.LabelFor(model => model.TiposEmpresa, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(d => d.IdTipoEmpresa, new SelectList(Model.TiposEmpresa.OrderBy(o => o.IdTipoEmpresa), "IdTipoEmpresa", "Descricao"), "Selecione", new { @class = "form-control select2" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Endereco, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Endereco, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Endereco, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.Complemento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Complemento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Complemento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Numero, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-1">
                @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Numero, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.Bairro, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Bairro, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.CEP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.CEP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CEP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cidade, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.Cidade, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cidade, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.UF, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-1">
                @Html.EditorFor(model => model.UF, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UF, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Telefone, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Telefone, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TipoCobranca, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.TipoCobranca, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TipoCobranca, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Observacao, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Observacao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Observacao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="file" class="control-label col-md-1">Logotipo</label>
            <div class="col-md-10">
                <input type="file" accept="image/*" onchange="loadFile(event)" class="btn btn-default"><br />
                <img id="output" style="width: 250px; height: 100px;" />
            </div>
        </div>

    }
    <div class="form-group">
        <div class="row">
            <div class="col-lg-12">
                <h4 class="page-header">Representante</h4>
            </div>
            <div class="form-group">
                <div class="col-md-4" style="padding-left: 30px;">
                    <a class="btn btn-primary" onclick="onShowModalCreate(@Model.IdEmpresa, 'Representante')">Novo</a>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-12">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <table class="table table-striped table-bordered table-hover" id="table-representante" width="100%">
                            <thead>
                                <tr>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Representantes.First().Nome)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Representantes.First().CPF)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Representantes.First().TelefoneCelular)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Representantes.First().Ativo)
                                    </th>
                                    <th>

                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Representantes)
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Nome)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.CPF)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.TelefoneCelular)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Ativo)
                                        </td>
                                        <td>
                                            <a class="btn btn-primary" onclick="onShowModalEdit(@item.IdPessoa, 'Representante')">Editar</a> |
                                            <a class="btn btn-danger" onclick="onShowModalDeleteRepresentante(@item.IdPessoa, @Model.IdEmpresa, 'Representante')">Excluir</a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

    </div>
    <div class="row">
        <div class="row">
            <div class="col-lg-12">
                <h4 class="page-header">Contrato</h4>
            </div>
            <div class="form-group">
                <div class="col-md-4" style="padding-left: 30px;">
                    <a class="btn btn-primary" onclick="onShowModalCreate(@Model.IdEmpresa, 'Contrato')">Novo</a>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <table class="table table-striped table-bordered table-hover" id="table-contrato" width="100%">
                            <thead>
                                <tr>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Contratos.First().Numero)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Contratos.First().InicioVigencia)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Contratos.First().FimVigencia)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Contratos.First().Ativo)
                                    </th>
                                    <th>

                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Contratos)
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Numero)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.InicioVigencia)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.FimVigencia)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Ativo)
                                        </td>
                                        <td>
                                            <a class="btn btn-primary" onclick="onShowModalEdit(@item.IdContrato, 'Contrato')">Editar</a> |
                                            <a class="btn btn-danger" onclick="onShowModalDelete(@item.IdContrato, 'Contrato')">Excluir</a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

    </div>

    <div class="form-group">
        <div class="col-md-10">
            <button id="btnSave" class="btn btn-primary" onclick="SubmitForm()">Salvar</button>
            @Html.ActionLink("Voltar", "Index", null, new { @class = "btn btn-danger" })
        </div>
    </div>
</div>

@*}*@
<div class="modal" id="modal" role="dialog" data-backdrop="static" data-keyboard="false"></div>




@section Scripts{
    <script src="~/Scripts/index.js"></script>

    <script>
        $(document).ready(function () {
            Datatables("table-representante");
            Datatables("table-contrato");
        });
    </script>
}
