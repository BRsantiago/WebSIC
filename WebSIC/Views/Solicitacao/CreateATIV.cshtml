@model Entity.Entities.Solicitacao

@{
    Layout = null;
}

<div class="modal-dialog" style="margin-left: 490px !important;">
    <div class="modal-content" style="width: 782px !important;">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>
            <h4 class="modal-title">Nova Solicitação de ATIV - Veículo</h4>
        </div>
        <div class="modal-body">
            @using (Html.BeginForm("CreateATIV", "Solicitacao", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                @Html.Hidden("VeiculoId", (object)ViewBag.VeiculoId)

            <div class="form-horizontal">
                <h4>@ViewBag.Veiculo</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                <div class="form-group">
                    @Html.LabelFor(model => model.Empresa, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Empresa.IdEmpresa, ViewBag.Empresas as SelectList, "--Selecione a empresa--", new { @class = "form-control", @readonly = "true", @disabled = "disabled" })
                        @Html.Hidden("EmpresaId")
                        @Html.ValidationMessageFor(model => model.Empresa, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Contrato, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Contrato.IdContrato, ViewBag.Contratos as SelectList, "--Selecione o contrato--", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Contrato, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TipoSolicitacao, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.TipoSolicitacao.IdTipoSolicitacao, ViewBag.TiposSolicitacao as SelectList, "--Selecione o tipo de solicitação--", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TipoSolicitacao, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TipoEmissao, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EnumDropDownListFor(model => model.TipoEmissao, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TipoEmissao, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Area1, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Area1.IdArea, ViewBag.Areas as SelectList, "--Selecione a 1ª área--", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Area1, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Area2, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Area2.IdArea, ViewBag.Areas as SelectList, "--Selecione a 2ª área--", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Area2, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PortaoAcesso, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.PortaoAcesso.IdPortaoAcesso, ViewBag.Portoes as SelectList, "--Selecione o portão de acesso--", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PortaoAcesso, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
            }
        </div>
        <div class="modal-footer">
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button id="btnSave" class="btn btn-primary" onclick="SubmitForm()">Salvar</button>
                    @*@Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-default" })*@
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
                </div>
            </div>
        </div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }

        <script type="text/javascript">
            $(function () {
                $("#EmpresaId").val($("#Empresa_IdEmpresa").val());
            });

            function SubmitForm() {
                var form = $("form");
                $.ajax({
                    url: form.attr("action"),
                    method: form.attr("method"),  // post
                    data: form.serialize(),
                    success: function (result) {
                        if (result.success) {
                            swal({
                                title: "Good job!",
                                text: result.message,
                                icon: "success",
                                button: "OK!"
                            })
                                .then((value) => {
                                    $('#modal').modal('hide');
                                    window.location = baseURL;
                                });
                        } else {
                            swal({
                                title: "Atenção!",
                                text: result.message,
                                icon: "warning",
                                button: "OK!"
                            })
                        }

                    },
                    error: function () {
                        swal({
                            title: "Erro de sistema!",
                            text: "Por favor entre em contato com o setor de TI!",
                            icon: "error"
                        });
                    }
                });
            }
        </script>

    </div>
</div>
