@model Entity.Entities.Credencial


<script src="https://cdn.jsdelivr.net/npm/sweetalert2@7/dist/sweetalert2.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@7/dist/sweetalert2.css">

<style type="text/css">
    .swal2-popup {
        font-size: 1.6rem !important;
    }

    .swal2-icon {
        width: 5em !important;
        height: 5em !important;
        border-width: .25em !important;
    }
</style>

<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">Impressão de ATIV</h1>
    </div>
</div>

<div class="row">
    <div class="col-sm-5">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })*@

                @{ Html.EnableClientValidation(false); }

                @Html.HiddenFor(model => model.IdCredencial)
                @Html.HiddenFor(model => model.FlgTemporario)

                @Html.HiddenFor(model => model.AeroportoId)
                @Html.HiddenFor(model => model.EmpresaId)
                @Html.HiddenFor(model => model.ContratoId)
                @Html.HiddenFor(model => model.VeiculoId)
                @Html.HiddenFor(model => model.Area1Id)
                @Html.HiddenFor(model => model.PortaoAcesso1Id)
                @Html.HiddenFor(model => model.PortaoAcesso2Id)
                @Html.HiddenFor(model => model.PortaoAcesso3Id)

                @Html.HiddenFor(model => model.Criacao)
                @Html.HiddenFor(model => model.Criador)
                @Html.HiddenFor(model => model.Ativo)

                <div class="form-group">
                    @Html.LabelFor(model => model.DataVencimento, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.DataVencimento, new { htmlAttributes = new { @class = "form-control", @type = "text", @Value = Model.DataVencimento.HasValue ? Model.DataVencimento.Value.ToString("dd/MM/yyyy") : "" } })
                    </div>
                    <div class="form-group">
                        <button type="submit" id="btnSubmit" name="btnSubmit" value="Atualizar" class="btn btn-primary">Atualizar</button>
                        <a value="Imprimir" id="PtrATIV" class="btn btn-success btnPrint" href="#">Imprimir</a>
                    </div>
                </div>
            </div>
        }

    </div>
    <div class="col-sm-5">
        <div class="form-horizontal">
            <div class="form-group">
                @*
                    <div class="control-label col-md-3">
                        <label>Impressora</label>
                    </div>
                    <div class="col-md-5">
                        @Html.DropDownList("Printers", ViewBag.Printers as SelectList, "Selecione", new { @class = "form-control select2", @id = "Printer" })
                    </div>
                    <div class="form-group">
                        <a value="Imprimir" id="PtrATIV" class="btn btn-success btnPrint" href="#">Imprimir</a>
                    </div>
                *@
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="form-horizontal">
        <div class="form-group">
            <div class="control-label col-md-2">
            </div>
            <div class="col-md-2">
                <div id="divReportFront"></div>
            </div>
        </div>
    </div>
</div>

<div>
    @Html.ActionLink("Voltar à Listagem de ATIVs", "IndexATIV")
</div>

<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.printPage.js"></script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


    <script>

        @*function ImprimirCredencial() {
            var printer = $("#Printer option:selected").text();
            var isATIV = true;

            Imprimir(@Model.IdCredencial, printer, isATIV);
        }*@

        $(document).ready(function () {

            $('#DataVencimento').mask('00/00/0000');

            var temp = $('#FlgTemporario').val();
            var date = new Date();
            var today = new Date(date.getFullYear(), date.getMonth(), date.getDate());

            $("#DataVencimento").datepicker({
                format: 'dd/mm/yyyy',
                todayBtn: "linked",
                clearBtn: true,
                autoclose: true,
                todayHighlight: true,
                minDate: today,
                startDate: "+0d",
                maxDate: temp == "True" ? (today + 30) : (today + 365),
                endDate: temp == "True" ? "+30d" : "+365d"
            });

            $("form").validate({
                errorClass: 'help-block animation-slideDown',
                errorElement: 'div',
                errorPlacement: function (error, e) {
                    e.parents('.form-group > div').append(error);
                },
                highlight: function (e) {
                    $(e).closest('.form-group').removeClass('has-success has-error').addClass('has-error');
                    $(e).closest('.help-block').remove();
                },
                success: function (e) {
                    e.closest('.form-group').removeClass('has-success has-error');
                    e.closest('.help-block').remove();
                },
                rules: {
                    'DataVencimento': { required: true },
                },
                messages: {
                    'DataVencimento': { required: "O campo 'Data de Vencimento' é de preenchimento obrigatório!" },
                }
            });

            var idCredencial = @Model.IdCredencial; //$("#IdCredencial").val();

            $.ajax({
                url: '@Url.Action("PreviewATIV","Credencial")',
                data: { idCredencial: idCredencial },
                method: "GET",
                success: function (result) {
                    var iframeFront = '<iframe id="reportFrame" width="900px" height="1100px" src="../../ReportFront.aspx" scrolling="no" frameborder="0"></iframe>';
                    $("#divReportFront").html(iframeFront);
                },
                error: function () {

                }
            });

            $(".btnPrint").printPage({
                url: '../../ReportFront.aspx',
                attr: "href",
                message: "Aguarde, o documento está sendo preparado para impressão!"
            });

            $(".btnPrint").click(function () {
                $.ajax({
                    url: '@Url.Action("ImprimirATIV", "Credencial")',
                    data: { idCredencial: idCredencial },
                    method: "POST",
                    success: function (serviceReturn) {
                        swal({
                            title: "Good job!",
                            text: serviceReturn.message,
                            type: "success",
                            showConfirmButton: true,
                            confirmButtonText: 'OK!'
                        })
                    },
                    error: function (serviceReturn) {
                        swal({
                            title: "Atenção!",
                            text: serviceReturn.message,
                            type: "warning",
                            showCancelButton: true,
                            cancelButtonText: 'OK!'
                        })
                    }
                });
            });
        });

    </script>
}
