@model WebSIC.Models.PessoaViewModel

<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">Pessoa</h1>
    </div>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <label for="file" class="control-label col-md-1">Foto</label>
            <div class="col-md-10">
                @*@Html.TextBoxFor(model => model.Foto, new { @type = "file", @class = "btn btn-default", @onchange = "loadFile(event)" })
                        <br />
                    <img id="output" style="width: 150px; height: 100px;" />
                *@

                <img id="Userpic" src="@ViewBag.Picture" />
                <br />
                <input type="button" id="btnSave" value="Take Photo" onclick="ShowPopUp();" />

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RG, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-2">
                <div class="checkbox">
                    @Html.EditorFor(model => model.RG, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            @Html.LabelFor(model => model.OrgaoExpeditor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                <div class="checkbox">
                    @Html.EditorFor(model => model.OrgaoExpeditor, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            @Html.LabelFor(model => model.UFOrgaoExpeditor, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-1">
                <div class="checkbox">
                    @Html.EditorFor(model => model.UFOrgaoExpeditor, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CPF, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-2">
                <div class="checkbox">
                    @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            @Html.LabelFor(model => model.RNE, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                <div class="checkbox">
                    @Html.EditorFor(model => model.RNE, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
            </div>

            @Html.LabelFor(model => model.Apelido, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Apelido, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataNascimento, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.DataNascimento, new { htmlAttributes = new { @class = "form-control" } })
            </div>

            @*@Html.LabelFor(model => model.Generos, htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-2">
                    <div class="checkbox">
                        @Html.DropDownListFor(d => d.IdGenero, new SelectList(Model.Generos.OrderBy(o => o.IdGenero), "IdGenero", "Descricao"), "Selecione", new { @class = "form-control select2" })
                        @Html.ValidationMessageFor(model => model.IdGenero, "", new { @class = "text-danger" })
                    </div>
                </div>*@

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NomePai, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.NomePai, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NomeMae, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.EditorFor(model => model.NomeMae, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CEP, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-2">
                <div class="checkbox">
                    @Html.EditorFor(model => model.CEP, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Endereco, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Endereco, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            @Html.LabelFor(model => model.Complemento, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-3">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Complemento, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Numero, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-1">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            @Html.LabelFor(model => model.Bairro, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cidade, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-2">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Cidade, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            @Html.LabelFor(model => model.UF, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-1">
                <div class="checkbox">
                    @Html.EditorFor(model => model.UF, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.TelefoneResidencial, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-2">
                <div class="checkbox">
                    @Html.EditorFor(model => model.TelefoneResidencial, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            @Html.LabelFor(model => model.TelefoneCelular, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-2">
                <div class="checkbox">
                    @Html.EditorFor(model => model.TelefoneCelular, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            @Html.LabelFor(model => model.TelefoneEmergencia, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-2">
                <div class="checkbox">
                    @Html.EditorFor(model => model.TelefoneEmergencia, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Observacao, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Observacao, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-5">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CNH, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-2">
                <div class="checkbox">
                    @Html.EditorFor(model => model.CNH, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            @Html.LabelFor(model => model.DataValidadeCNH, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-2">
                <div class="checkbox">
                    @Html.EditorFor(model => model.DataValidadeCNH, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            @Html.LabelFor(model => model.CategoriaCNH, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-1">
                <div class="checkbox">
                    @Html.EditorFor(model => model.CategoriaCNH, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FlgCVE, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-1">
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.FlgCVE, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                <input type="submit" value="Salvar" class="btn btn-primary" />
                @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-danger" })
            </div>
        </div>
    </div>

}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        function ShowPopUp() {
            window.open('/Photo/Index/', "wndPopUp", 'width=800,height=400,left=100,top=100,resizable=no');
        }
    </script>


    <script>



function PopUpResult(result) {
    var html;
    if (result.html)
        html = result.html;
    if (result.src)
        html = '<img src="' + result.src + '" />';

    swal({
        title: '',
        html: true,
        text: html,
        allowOutsideClick: true,
        icon: "success"
    });

    setTimeout(function () {
        $('.sweet-alert').css('margin', function () {
            var top = -1 * ($(this).height() / 2);
            var left = -1 * ($(this).width() / 2);
            return top + 'px 0 0 ' + left + 'px';
        });
    }, 1);
}
function UploadPic() {
    $.ajax({
        type: 'POST',
        url: ("@Url.Content("~/Photo/Rebind")/"),
        dataType: 'json',
            success: function (data) {
                $("#show").croppie("bind", { url: data });
                document.getElementById('Submit1').disabled = false;
                swal({
                    title: "Good job!",
                    text: "Photo Capture successfully!",
                    icon: "success",
                    button: "OK!",
                });
            }
});
    }
function UploadSubmit() {
    debugger;
    $("#show").croppie('result', {
        type: 'canvas',
        size: 'viewport'
    }).then(function (resp) {
        $.ajax({
            type: 'POST',
            url: ("@Url.Content("~/Photo/Index")/"),
            dataType: 'json',
                data: { base64Image: resp },
        success: function () {
            swal({
                title: "Good job!",
                text: "Photo was upload successfully!",
                icon: "success",
                button: "OK!",
            });
        }
    });
});
window.opener.location.href = "http://localhost:55694/Photo/Changephoto";
self.close();
    }
function Load() {
    debugger;
    $("#Camera").webcam({
        width: 320,
        height: 240,
        mode: "save",
        swffile: "@Url.Content("~/Scripts/jscam.swf")",
        onTick: function () { },
        onSave: function () {
            UploadPic();
        },
        onCapture: function () {
            webcam.save("@Url.Content("~/Photo/Capture")/");
        },
        debug: function () { },
        onLoad: function () { }
        });

document.getElementById('Submit1').disabled = true;

$("#show").croppie({
    viewport: {
        width: 150,
        height: 200
    },
    boundary: {
        width: 320,
        height: 240
    },
    showZoomer: true,
    enableResize: true,
    enableOrientation: true
});
    }

$(document).ready(function () {
    Load();
});

    </script>
}
