@model WebSIC.Models.PessoaViewModel

@if (TempData["notification"] != null)
{
    @Html.Raw(TempData["notification"])
    TempData["notification"] = null;
}


<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">Pessoa</h1>
    </div>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.RG, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-2">
                <div class="checkbox">
                    @Html.EditorFor(model => model.RG, new { htmlAttributes = new { @class = "form-control", @placeholder = "00000000-00" } })
                </div>
            </div>

            @Html.LabelFor(model => model.OrgaoExpeditor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                <div class="checkbox">
                    @Html.EditorFor(model => model.OrgaoExpeditor, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            @Html.LabelFor(model => model.UFOrgaoExpeditor, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-1">
                <div class="checkbox">
                    @Html.EditorFor(model => model.UFOrgaoExpeditor, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CPF, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-2">
                <div class="checkbox">
                    @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control", @placeholder = "000.000.000-00" } })
                </div>
            </div>

            @Html.LabelFor(model => model.RNE, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                <div class="checkbox">
                    @Html.EditorFor(model => model.RNE, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                </div>
            </div>

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NomeCompleto, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.NomeCompleto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NomeCompleto, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataNascimento, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.DataNascimento, new { htmlAttributes = new { @class = "form-control", @placeholder = "00/00/0000" } })
            </div>
        </div>

        @Html.LabelFor(model => model.Genero, htmlAttributes: new { @class = "control-label col-md-1" })
        <div class="col-md-2">
            <div class="checkbox">
                @Html.EnumDropDownListFor(d => d.Genero, "Selecione", new { @class = "form-control select2" })
                @Html.ValidationMessageFor(model => model.Genero, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.NomePai, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.NomePai, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NomeMae, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.EditorFor(model => model.NomeMae, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CEP, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-2">
                <div class="checkbox">
                    @Html.EditorFor(model => model.CEP, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Endereco, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Endereco, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            @Html.LabelFor(model => model.Complemento, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-3">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Complemento, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Numero, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-1">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                </div>
            </div>

            @Html.LabelFor(model => model.Bairro, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cidade, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-2">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Cidade, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            @Html.LabelFor(model => model.UF, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-1">
                <div class="checkbox">
                    @Html.EditorFor(model => model.UF, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.TelefoneResidencial, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-2">
                <div class="checkbox">
                    @Html.EditorFor(model => model.TelefoneResidencial, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            @Html.LabelFor(model => model.TelefoneCelular, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-2">
                <div class="checkbox">
                    @Html.EditorFor(model => model.TelefoneCelular, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            @Html.LabelFor(model => model.TelefoneEmergencia, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-2">
                <div class="checkbox">
                    @Html.EditorFor(model => model.TelefoneEmergencia, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TelefoneEmergencia, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Observacao, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Observacao, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-5">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CNH, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-2">
                <div class="checkbox">
                    @Html.EditorFor(model => model.CNH, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            @Html.LabelFor(model => model.DataValidadeCNH, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-2">
                <div class="checkbox">
                    @Html.EditorFor(model => model.DataValidadeCNH, new { htmlAttributes = new { @class = "form-control", @placeholder = "00/00/0000" } })
                </div>
            </div>

            @Html.LabelFor(model => model.CategoriaUm, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-2">
                <div class="checkbox">
                    @Html.EnumDropDownListFor(d => d.CategoriaUm, "Selecione", new { @class = "form-control select1" })
                </div>
            </div>

            <div class="col-md-2">
                <div class="checkbox">
                    @Html.EnumDropDownListFor(d => d.CategoriaDois, "Selecione", new { @class = "form-control select1" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FlgCVE, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-1">
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.FlgCVE, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-4">
                <input type="submit" value="Salvar" class="btn btn-primary" />
                @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-danger" })
            </div>
        </div>
    </div>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="@Url.Content("~/Scripts/jquery.webcam.js")"></script>
    @*<script src="@Url.Content("~/Scripts/app.js")"></script>*@

    <script type="text/javascript">

        $('#CPF').mask('000.000.000-00');
        //$('#RG').mask('00000000-00');
        $('#CEP').mask('00000-000');
        $('#TelefoneResidencial').mask('(00) 00000-0000');
        $('#TelefoneCelular').mask('(00) 00000-0000');
        $('#TelefoneEmergencia').mask('(00) 00000-0000');
        $('#DataValidadeCNH').mask('00/00/0000');
        $('#DataNascimento').mask('00/00/0000');

        $("#DataValidadeCNH").datepicker({
            showOn: "button",
            format: 'dd/mm/yyyy',
            todayBtn: "linked",
            clearBtn: true,
            autoclose: true,
            todayHighlight: true
        });


        $("#DataNascimento").datepicker({
            showOn: "button",
            format: 'dd/mm/yyyy',
            todayBtn: "linked",
            clearBtn: true,
            autoclose: true,
            todayHighlight: true
        });

        var date = new Date();
        var today = new Date(date.getFullYear(), date.getMonth(), date.getDate());
        $('#DataNascimento').datepicker('setDate', today);

    </script>

}
